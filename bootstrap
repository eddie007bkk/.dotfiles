#!/bin/bash

# Run this on new machines to set up the environment

H=$HOME
D=$HOME/.dotfiles
B=$H/backup_dotfiles

# create backup dir if one doesn't already exist
if [ ! -d $B ]; then mkdir $B; fi

# move all the dotfiles to backup dir
if [ -f $H/.colordiffrc ]; then mv $H/.colordiffrc $B/.colordiffrc; fi
if [ -f $H/.screenrc ]; then mv $H/.screenrc $B/.screenrc; fi
if [ -f $H/.tmux.conf ]; then mv $H/.tmux.conf $B/.tmux.conf; fi
if [ -f $H/.bashrc ]; then mv $H/.bashrc $B/.bashrc; fi
if [ -f $H/.gitconfig ]; then mv $H/.gitconfig $B/.gitconfig; fi

# link all the dotfiles
ln -s $D/.colordiffrc $H/.colordiffrc
ln -s $D/.screenrc $H/.screenrc
ln -s $D/.tmux.conf $H/.tmux.conf

# configure git
cat $D/.gitconfig > $H/.gitconfig
if [ -f $H/.gitconfig.local ]; then cat $H/.gitconfig.local >> $H/.gitconfig; fi

if [ $(uname -s) == "Darwin" ]; then
    
    if [ -f $H/.profile ]; then mv $H/.profile $B/.profile; fi
    ln -s $D/.profile_mac $H/.profile
fi

if [[ $(uname -s) == "CYGWIN"* ]];then

    if [ -f $H/.bashrc_local ]; then mv $H/.bashrc_local $B/.bashrc_local; fi
    ln -s $D/.bashrc_cygwin $H/.bashrc_local
fi

# special rules for bashrc (respect local)
if [ -f $B/.bashrc ]; then
    # if bashrc exists, use it but source the dotfiles one first
    { echo "source $D/.bashrc"; cat $B/.bashrc; } | tee $H/.bashrc > /dev/null
else
    # else just link 
    ln -s $D/.bashrc $H/.bashrc
fi

# source .bashrc
source $H/.bashrc
